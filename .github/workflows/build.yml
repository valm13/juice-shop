# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build docker

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x, 12.x]

    steps:
     - uses: actions/checkout@v2
     
     - name: configure-aws
       run: |
         aws configure set default.region us-east-1
         aws configure set default.output json
         aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws configure set aws_session_token ${{ secrets.AWS_SESSION_TOKEN }}
         
     #- name: Install NPM dependencies
     #  run: |
     #    npm install --production --unsafe-perm
     #    
     #- uses: sburris/dependency-check-action@master
     #  with:
     #    Project-Name: juice-shop
     #    Report-Location: '/github/workspace/reports'
     #    Log-Name: log.txt
     #   
     #- name: SonarCloud Scan
     #  uses: sonarsource/sonarcloud-github-action@master
     #  env:
     #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
     #    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

     - name: build-push
       uses: docker/build-push-action@v1
       with:
         username: ${{ secrets.DOCKER_USERNAME }}
         password: ${{ secrets.DOCKER_PASSWORD }}
         registry: docker.io
         repository: valm13/juice-shop
         tags: juice-shop
         tag_with_sha: true
     
     #- name: use klar
       #run: |
         #wget https://github.com/optiopay/klar/releases/download/v2.4.0/klar-2.4.0-linux-amd64 -O klar
         #chmod +x klar
         #CLAIR_ADDR=http://clair.3r1.co:6060 ./klar valm13/juice-shop:sha-$(git rev-parse --short HEAD)

     - name: prepare-kustomize
       run: |
         sed -i "s#IMAGE_NAME#valm13/juice-shop#g" kustomization.yaml
         sed -i "s/IMAGE_TAG/sha-$(git rev-parse --short HEAD)/g" kustomization.yaml
         cat kustomization.yaml

     - name: deploy-to-k8s
       run: |
         aws eks update-kubeconfig --name isen-2
         kubectl kustomize . | kubectl apply -f -
